"use strict";(self.webpackChunkbinary_security=self.webpackChunkbinary_security||[]).push([[7862],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>f});var r=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),g=i,f=u["".concat(l,".").concat(g)]||u[g]||y[g]||a;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=g;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:i,s[1]=o;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9464:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>y,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=n(8168),i=(n(6540),n(5680));const a={},s=void 0,o={unversionedId:"Mitigation and Defensive Strategies/Bypassing Mitigations/Drills/Tutorial Bypass/README",id:"Mitigation and Defensive Strategies/Bypassing Mitigations/Drills/Tutorial Bypass/README",title:"README",description:"This exploit works with ASLR disabled. To disable ASLR (it's enabled by default on Linux) use:",source:"@site/docs/Mitigation and Defensive Strategies/Bypassing Mitigations/Drills/Tutorial Bypass/README.md",sourceDirName:"Mitigation and Defensive Strategies/Bypassing Mitigations/Drills/Tutorial Bypass",slug:"/Mitigation and Defensive Strategies/Bypassing Mitigations/Drills/Tutorial Bypass/",permalink:"/binary-security/Mitigation and Defensive Strategies/Bypassing Mitigations/Drills/Tutorial Bypass/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Drills",permalink:"/binary-security/Mitigation and Defensive Strategies/Bypassing Mitigations/Drills/"},next:{title:"README",permalink:"/binary-security/Mitigation and Defensive Strategies/Bypassing Mitigations/Drills/Challenge Bypass No ASLR/"}},l={},p=[],c={toc:p},u="wrapper";function y({components:e,...t}){return(0,i.yg)(u,(0,r.A)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"This exploit works with ASLR disabled. To disable ASLR (it's enabled by default on Linux) use:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"setarch x86_64 -R /bin/bash\n")),(0,i.yg)("p",null,"We find the non-randomized address of the ",(0,i.yg)("inlineCode",{parentName:"p"},"puts")," function in the standard C library by using GDB:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},'$ gdb ./vuln\nReading symbols from ./vuln...done.\n(gdb) start\nTemporary breakpoint 1 at 0x40059e: file vuln.c, line 13.\nStarting program: /home/razvan/projects/ctf/sss/sss-exploit-internal.git/sessions/12-bypassing-mitigations/activities/03-tutorial-bypass-dep-no-aslr-libc/vuln\n\nTemporary breakpoint 1, main () at vuln.c:13\n13              puts("Hello");\n\n(gdb) p puts\n$1 = {int (const char *)} 0x7ffff7a64a30 <_IO_puts>\n')))}y.isMDXComponent=!0}}]);